package com.gal.afiliaciones.config.mapper;

import com.gal.afiliaciones.domain.model.affiliate.affiliationworkedemployeractivitiesmercantile.AffiliateMercantile;
import com.gal.afiliaciones.domain.model.affiliationemployerdomesticserviceindependent.Affiliation;
import com.gal.afiliaciones.infrastructure.dto.user.UserUpdateDTO;
import org.mapstruct.*;

@Mapper(componentModel = MappingConstants.ComponentModel.SPRING)
public interface UpdatePreRegisterMapper {

    @Mapping(source = "phoneNumber", target = "phoneOneLegalRepresentative")
    @Mapping(source = "phone2", target = "phoneTwoLegalRepresentative")
    @Mapping(source = "identificationType", target = "typeDocumentPersonResponsible")
    @Mapping(source = "identification", target = "numberDocumentPersonResponsible")
    @Mapping(source = "address.idDepartment", target = "idDepartmentLegalRepresentative")
    @Mapping(source = "address.idCity", target = "idCityLegalRepresentative")
    @Mapping(source = "address.idMainStreet", target = "idMainStreetLegalRepresentative")
    @Mapping(source = "address.idNumberMainStreet", target = "idNumberMainStreetLegalRepresentative")
    @Mapping(source = "address.idLetter1MainStreet", target = "idLetter1MainStreetLegalRepresentative")
    @Mapping(source = "address.isBis", target = "isBisLegalRepresentative")
    @Mapping(source = "address.idLetter2MainStreet", target = "idLetter2MainStreetLegalRepresentative")
    @Mapping(source = "address.idCardinalPointMainStreet", target = "idCardinalPointMainStreetLegalRepresentative")
    @Mapping(source = "address.idNum1SecondStreet", target = "idNum1SecondStreetLegalRepresentative")
    @Mapping(source = "address.idLetterSecondStreet", target = "idLetterSecondStreetLegalRepresentative")
    @Mapping(source = "address.idNum2SecondStreet", target = "idNum2SecondStreetLegalRepresentative")
    @Mapping(source = "address.idCardinalPoint2", target = "idCardinalPoint2LegalRepresentative")
    @Mapping(source = "address.idHorizontalProperty1", target = "idHorizontalProperty1LegalRepresentative")
    @Mapping(source = "address.idNumHorizontalProperty1", target = "idNumHorizontalProperty1LegalRepresentative")
    @Mapping(source = "address.idHorizontalProperty2", target = "idHorizontalProperty2LegalRepresentative")
    @Mapping(source = "address.idNumHorizontalProperty2", target = "idNumHorizontalProperty2LegalRepresentative")
    @Mapping(source = "address.idHorizontalProperty3", target = "idHorizontalProperty3LegalRepresentative")
    @Mapping(source = "address.idNumHorizontalProperty3", target = "idNumHorizontalProperty3LegalRepresentative")
    @Mapping(source = "address.idHorizontalProperty4", target = "idHorizontalProperty4LegalRepresentative")
    @Mapping(source = "address.idNumHorizontalProperty4", target = "idNumHorizontalProperty4LegalRepresentative")
    @Mapping(source = "address.address", target = "addressLegalRepresentative")
    @Mapping(source = "healthPromotingEntity", target = "eps")
    @Mapping(source = "pensionFundAdministrator", target = "afp")
    @BeanMapping(ignoreByDefault = true)
    void requestToMercantile(UserUpdateDTO dto, @MappingTarget AffiliateMercantile entity);

    @BeanMapping(ignoreByDefault = true)
    @Mapping(source = "firstName", target = "firstName")
    @Mapping(source = "firstName", target = "firstNameIndependentWorker")
    @Mapping(source = "secondName", target = "secondName")
    @Mapping(source = "secondName", target = "secondNameIndependentWorker")
    @Mapping(source = "surname", target = "surname")
    @Mapping(source = "surname", target = "surnameIndependentWorker")
    @Mapping(source = "secondSurname", target = "secondSurname")
    @Mapping(source = "secondSurname", target = "secondSurnameIndependentWorker")
    @Mapping(source = "dateBirth", target = "dateOfBirth", dateFormat = "yyyy-MM-dd")
    @Mapping(source = "dateBirth", target = "dateOfBirthIndependentWorker", dateFormat = "yyyy-MM-dd")
    @Mapping(source = "age", target = "age")
    @Mapping(source = "sex", target = "gender")
    @Mapping(source = "otherSex", target = "otherGender")
    @Mapping(source = "nationality", target = "nationalityIndependentWorker")
    @Mapping(source = "healthPromotingEntity", target = "healthPromotingEntity")
    @Mapping(source = "pensionFundAdministrator", target = "pensionFundAdministrator")
    @Mapping(source = "address.address", target = "addressIndependentWorker")
    @Mapping(source = "address.idDepartment", target = "idDepartmentIndependentWorker")
    @Mapping(source = "address.idCity", target = "idCityIndependentWorker")
    @Mapping(source = "address.idMainStreet", target = "idMainStreetIndependentWorker")
    @Mapping(source = "address.idNumberMainStreet", target = "idNumberMainStreetIndependentWorker")
    @Mapping(source = "address.idLetter1MainStreet", target = "idLetter1MainStreetIndependentWorker")
    @Mapping(source = "address.isBis", target = "isBisIndependentWorker")
    @Mapping(source = "address.idLetter2MainStreet", target = "idLetter2MainStreetIndependentWorker")
    @Mapping(source = "address.idCardinalPointMainStreet", target = "idCardinalPointMainStreetIndependentWorker")
    @Mapping(source = "address.idNum1SecondStreet", target = "idNum1SecondStreetIndependentWorker")
    @Mapping(source = "address.idLetterSecondStreet", target = "idLetterSecondStreetIndependentWorker")
    @Mapping(source = "address.idNum2SecondStreet", target = "idNum2SecondStreetIndependentWorker")
    @Mapping(source = "address.idCardinalPoint2", target = "idCardinalPoint2IndependentWorker")
    @Mapping(source = "address.idHorizontalProperty1", target = "idHorizontalProperty1IndependentWorker")
    @Mapping(source = "address.idNumHorizontalProperty1", target = "idNumHorizontalProperty1IndependentWorker")
    @Mapping(source = "address.idHorizontalProperty2", target = "idHorizontalProperty2IndependentWorker")
    @Mapping(source = "address.idNumHorizontalProperty2", target = "idNumHorizontalProperty2IndependentWorker")
    @Mapping(source = "address.idHorizontalProperty3", target = "idHorizontalProperty3IndependentWorker")
    @Mapping(source = "address.idNumHorizontalProperty3", target = "idNumHorizontalProperty3IndependentWorker")
    @Mapping(source = "address.idHorizontalProperty4", target = "idHorizontalProperty4IndependentWorker")
    @Mapping(source = "address.idNumHorizontalProperty4", target = "idNumHorizontalProperty4IndependentWorker")
    @Mapping(source = "address.idDepartment", target = "department")
    @Mapping(source = "address.idCity", target = "cityMunicipality")
    @Mapping(source = "address.address", target = "address")
    @Mapping(source = "address.idMainStreet", target = "idMainStreet")
    @Mapping(source = "address.idNumberMainStreet", target = "idNumberMainStreet")
    @Mapping(source = "address.idLetter1MainStreet", target = "idLetter1MainStreet")
    @Mapping(source = "address.isBis", target = "isBis")
    @Mapping(source = "address.idLetter2MainStreet", target = "idLetter2MainStreet")
    @Mapping(source = "address.idCardinalPointMainStreet", target = "idCardinalPointMainStreet")
    @Mapping(source = "address.idNum1SecondStreet", target = "idNum1SecondStreet")
    @Mapping(source = "address.idLetterSecondStreet", target = "idLetterSecondStreet")
    @Mapping(source = "address.idNum2SecondStreet", target = "idNum2SecondStreet")
    @Mapping(source = "address.idCardinalPoint2", target = "idCardinalPoint2")
    @Mapping(source = "address.idHorizontalProperty1", target = "idHorizontalProperty1")
    @Mapping(source = "address.idNumHorizontalProperty1", target = "idNumHorizontalProperty1")
    @Mapping(source = "address.idHorizontalProperty2", target = "idHorizontalProperty2")
    @Mapping(source = "address.idNumHorizontalProperty2", target = "idNumHorizontalProperty2")
    @Mapping(source = "address.idHorizontalProperty3", target = "idHorizontalProperty3")
    @Mapping(source = "address.idNumHorizontalProperty3", target = "idNumHorizontalProperty3")
    @Mapping(source = "address.idHorizontalProperty4", target = "idHorizontalProperty4")
    @Mapping(source = "address.idNumHorizontalProperty4", target = "idNumHorizontalProperty4")
    @Mapping(source = "phoneNumber", target = "phone1")
    @Mapping(source = "phone2", target = "phone2")
    @Mapping(source = "email", target = "email")
    void requestToAffiliationDetailIndependent(UserUpdateDTO dto, @MappingTarget Affiliation entity);

    @BeanMapping(ignoreByDefault = true)
    @Mapping(source = "healthPromotingEntity", target = "healthPromotingEntity")
    @Mapping(source = "pensionFundAdministrator", target = "pensionFundAdministrator")
    @Mapping(source = "firstName", target = "firstName")
    @Mapping(source = "secondName", target = "secondName")
    @Mapping(source = "surname", target = "surname")
    @Mapping(source = "secondSurname", target = "secondSurname")
    @Mapping(source = "phoneNumber", target = "phone1")
    @Mapping(source = "phone2", target = "phone2")
    @Mapping(source = "email", target = "email")
    @Mapping(source = "age", target = "age")
    @Mapping(source = "sex", target = "gender")
    @Mapping(source = "otherSex", target = "otherGender")
    @Mapping(source = "dateBirth", target = "dateOfBirth", dateFormat = "yyyy-MM-dd")
    @Mapping(source = "address.idDepartment", target = "departmentEmployer")
    @Mapping(source = "address.idCity", target = "municipalityEmployer")
    @Mapping(source = "address.address", target = "addressEmployer")
    @Mapping(source = "address.idMainStreet", target = "idMainStreetEmployer")
    @Mapping(source = "address.idNumberMainStreet", target = "idNumberMainStreetEmployer")
    @Mapping(source = "address.idLetter1MainStreet", target = "idLetter1MainStreetEmployer")
    @Mapping(source = "address.isBis", target = "isBisEmployer")
    @Mapping(source = "address.idLetter2MainStreet", target = "idLetter2MainStreetEmployer")
    @Mapping(source = "address.idCardinalPointMainStreet", target = "idCardinalPointMainStreetEmployer")
    @Mapping(source = "address.idNum1SecondStreet", target = "idNum1SecondStreetEmployer")
    @Mapping(source = "address.idLetterSecondStreet", target = "idLetterSecondStreetEmployer")
    @Mapping(source = "address.idNum2SecondStreet", target = "idNum2SecondStreetEmployer")
    @Mapping(source = "address.idCardinalPoint2", target = "idCardinalPoint2Employer")
    @Mapping(source = "address.idHorizontalProperty1", target = "idHorizontalProperty1Employer")
    @Mapping(source = "address.idNumHorizontalProperty1", target = "idNumHorizontalProperty1Employer")
    @Mapping(source = "address.idHorizontalProperty2", target = "idHorizontalProperty2Employer")
    @Mapping(source = "address.idNumHorizontalProperty2", target = "idNumHorizontalProperty2Employer")
    @Mapping(source = "address.idHorizontalProperty3", target = "idHorizontalProperty3Employer")
    @Mapping(source = "address.idNumHorizontalProperty3", target = "idNumHorizontalProperty3Employer")
    @Mapping(source = "address.idHorizontalProperty4", target = "idHorizontalProperty4Employer")
    @Mapping(source = "address.idNumHorizontalProperty4", target = "idNumHorizontalProperty4Employer")
    @Mapping(source = "nationality", target = "nationality")
    void requestToAffiliationDetailDomestic(UserUpdateDTO dto, @MappingTarget Affiliation entity);

    @BeanMapping(ignoreByDefault = true)
    @Mapping(source = "firstName", target = "firstName")
    @Mapping(source = "secondName", target = "secondName")
    @Mapping(source = "surname", target = "surname")
    @Mapping(source = "secondSurname", target = "secondSurname")
    @Mapping(source = "dateBirth", target = "dateOfBirth", dateFormat = "yyyy-MM-dd")
    @Mapping(source = "age", target = "age")
    @Mapping(source = "sex", target = "gender")
    @Mapping(source = "otherSex", target = "otherGender")
    @Mapping(source = "healthPromotingEntity", target = "healthPromotingEntity")
    @Mapping(source = "pensionFundAdministrator", target = "pensionFundAdministrator")
    @Mapping(source = "address.idDepartment", target = "department")
    @Mapping(source = "address.idCity", target = "cityMunicipality")
    @Mapping(source = "address.address", target = "address")
    @Mapping(source = "address.idMainStreet", target = "idMainStreet")
    @Mapping(source = "address.idNumberMainStreet", target = "idNumberMainStreet")
    @Mapping(source = "address.idLetter1MainStreet", target = "idLetter1MainStreet")
    @Mapping(source = "address.isBis", target = "isBis")
    @Mapping(source = "address.idLetter2MainStreet", target = "idLetter2MainStreet")
    @Mapping(source = "address.idCardinalPointMainStreet", target = "idCardinalPointMainStreet")
    @Mapping(source = "address.idNum1SecondStreet", target = "idNum1SecondStreet")
    @Mapping(source = "address.idLetterSecondStreet", target = "idLetterSecondStreet")
    @Mapping(source = "address.idNum2SecondStreet", target = "idNum2SecondStreet")
    @Mapping(source = "address.idCardinalPoint2", target = "idCardinalPoint2")
    @Mapping(source = "address.idHorizontalProperty1", target = "idHorizontalProperty1")
    @Mapping(source = "address.idNumHorizontalProperty1", target = "idNumHorizontalProperty1")
    @Mapping(source = "address.idHorizontalProperty2", target = "idHorizontalProperty2")
    @Mapping(source = "address.idNumHorizontalProperty2", target = "idNumHorizontalProperty2")
    @Mapping(source = "address.idHorizontalProperty3", target = "idHorizontalProperty3")
    @Mapping(source = "address.idNumHorizontalProperty3", target = "idNumHorizontalProperty3")
    @Mapping(source = "address.idHorizontalProperty4", target = "idHorizontalProperty4")
    @Mapping(source = "address.idNumHorizontalProperty4", target = "idNumHorizontalProperty4")
    @Mapping(source = "phoneNumber", target = "phone1")
    @Mapping(source = "phone2", target = "phone2")
    @Mapping(source = "email", target = "email")
    @Mapping(source = "nationality", target = "nationality")
    void requestToAffiliationDriverOrVolunteer(UserUpdateDTO dto, @MappingTarget Affiliation entity);

}
